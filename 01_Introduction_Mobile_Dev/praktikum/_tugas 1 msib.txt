Nama        : Hidayah Daniawati
Kelas        : D-Flutter




Introduction Mobile App Development
Soal Prioritas 1 (Nilai 80)
1. Tuliskan 5 bahasa pemrograman untuk membuat aplikasi Mobile(contoh: C# untuk Desktop Windows)
Jawab: 
* Bahasa Pemrograman untuk Platform Android
1. Java
Java adalah bahasa yang dikembangkan oleh James Gosling dan timnya di Sun Microsystems pada tahun 1995. Java awalnya dibuat untuk digunakan untuk pengembangan perangkat elektronik seperti televisi. Kemudian, Java populer digunakan untuk pengembangan aplikasi desktop dan mobile.
Java menggunakan paradigma pemrograman berorientasi objek, berarti bahwa semua data dan logika aplikasi diwakili oleh objek-objek yang saling terkait. Hal ini membuat Java mudah dipelajari dan dipahami oleh programmer yang belum pernah belajar pemrograman sebelumnya.
2. Kotlin
Kotlin dikembangkan oleh JetBrains dan diperkenalkan pada tahun 2011. Pada tahun 2017, Google mengumumkan bahwa Kotlin menjadi bahasa pemrograman resmi untuk pengembangan aplikasi Android. Jadi, saat ini Kotlin telah menjadi bahasa yang populer digunakan oleh para pengembang aplikasi Android. Sampai saat tulisan ini dibuat, 87% dari 1000 aplikasi teratas di Play Store menggunakan Kotlin.Meski begitu, Kotlin bukan hanya berguna untuk pengembangan aplikasi Android. Sisi lainnya, Kotlin bisa digunakan untuk berbagai keperluan, seperti Web Front-end, Back-end, bahkan untuk Data Science.


* Bahasa Pemrograman untuk Platform iOS
1. Objective-C
Objective-C adalah bahasa yang dikembangkan oleh Brad Cox dan Tom Love pada tahun 1984. Objective-C awalnya dibuat sebagai tambahan terhadap bahasa C, tetapi kemudian menjadi bahasa utama untuk pengembangan aplikasi macOS dan iOS. Meskipun saat ini sudah ada bahasa baru untuk pengembangan iOS, tetapi Objective-C masih cukup banyak digunakan oleh kalangan yang sudah lama terjun di dunia iOS.
2. Swift
Swift dikembangkan oleh Apple pada tahun 2014. Swift ditujukan untuk menggantikan  Objective-C sebagai bahasa utama pengembangan aplikasi macOS dan iOS.Kelebihan dari Swift adalah ia memiliki sintaks yang lebih mudah dipahami dibandingkan dengan Objective-C, terutama dengan fitur type inference yang memungkinkan Swift untuk mengetahui tipe data dari sebuah variabel secara otomatis. Selain itu, Swift juga memiliki fitur null safety. Ini memungkinkan programmer untuk mencegah terjadinya null pointer exception dengan menandai variabel yang memiliki kemungkinan nilai null.Berikut adalah contoh kode untuk menampilkan teks “Hello, world!” dengan Swift.
* Bahasa Pemrograman untuk Cross-Platform (Hybrid)
1. Javascript
JavaScript adalah bahasa yang dikembangkan oleh Netscape pada tahun 1995. JavaScript awalnya dibuat untuk menambahkan interaktivitas pada halaman web, tetapi sekarang telah menjadi bahasa pemrograman yang umum digunakan untuk berbagai macam aplikasi, termasuk aplikasi mobile, desktop, dan server.Nah, terkait pertanyaan di awal artikel ini, ternyata JavaScript juga bisa digunakan untuk mengembangkan aplikasi mobile. Salah satu framework berbasis JavaScript yang banyak digunakan untuk membuat aplikasi mobile adalah React Native. Dengan menuliskan satu kali kode dengan framework tersebut, kamu bisa membuat aplikasi Android dan iOS sekaligus.


2. Dart
Dart adalah bahasa yang dikembangkan oleh Google pada tahun 2011. Dart awalnya ditujukan untuk menggantikan JavaScript sebagai bahasa pemrograman utama untuk pengembangan aplikasi web, tetapi sekarang juga digunakan untuk pengembangan aplikasi mobile, desktop, dan server.Pengembangan mobile dengan Dart menggunakan framework Flutter. Dart dan Flutter sama-sama dikembangkan oleh Google. Sama halnya seperti React Native, menggunakan Flutter kamu juga bisa membuat aplikasi Android dan iOS dengan hanya membuat satu codebase.


2. Cari dan tuliskan 5 aplikasi yang berjalan pada sistem operasi Android namun tidak pada sistem operasi iOS
Jawab: 
1. Tasker: Tasker adalah aplikasi otomatisasi yang memungkinkan pengguna mengatur berbagai tindakan otomatis berdasarkan kondisi tertentu pada perangkat Android mereka. Meskipun ada beberapa alternatif di iOS, tidak ada yang setara dengan kemampuan dan fleksibilitas Tasker.
2. Lucky Patcher: Lucky Patcher adalah aplikasi yang memungkinkan pengguna menghapus lisensi atau iklan dalam aplikasi Android, atau bahkan mengubah aplikasi secara mendalam. Karena alasan kebijakan dan keamanan, jenis aplikasi semacam ini jarang ditemukan di App Store untuk iOS.
3. ES File Explorer: Pada waktu yang lalu, ES File Explorer adalah aplikasi populer di Android yang memungkinkan pengguna mengelola file dan aplikasi di perangkat mereka. Namun, aplikasi ini telah mengalami beberapa perubahan dan kontroversi, dan saat ini tidak tersedia di App Store.
4. Viper4Android: Viper4Android adalah aplikasi equalizer suara yang mendalam untuk perangkat Android. Aplikasi ini memungkinkan pengguna untuk mengontrol berbagai aspek audio, tetapi pada saat itu tidak ada aplikasi serupa yang dapat memodifikasi sistem audio di iOS.
5. TubeMate: TubeMate adalah aplikasi yang memungkinkan pengguna untuk mengunduh video dari platform berbagi video seperti YouTube langsung ke perangkat mereka. Kebijakan yang lebih ketat di iOS terhadap aplikasi yang melanggar hak cipta dan kebijakan YouTube menyebabkan aplikasi semacam TubeMate tidak tersedia di App Store.
Soal Prioritas 2 (Nilai 20)
1. Cari dan tuliskan 5 aplikasi yang berjalan pada sistem operasi IOS namun tidak pada sistem operasi Android
Jawab:
1. GarageBand: Aplikasi ini adalah aplikasi produksi musik yang dikembangkan oleh Apple. Ini memungkinkan pengguna untuk membuat, merekam, dan mengedit musik langsung dari perangkat iOS mereka.
2. iMovie: iMovie adalah aplikasi pengeditan video yang memungkinkan pengguna iOS untuk membuat video berkualitas tinggi dengan berbagai efek, transisi, dan fitur pengeditan lainnya.
3. Final Cut Pro: Ini adalah versi yang lebih canggih dari iMovie dan dirancang untuk pengeditan video profesional. Aplikasi ini hanya tersedia untuk macOS dan tidak ada versi resmi yang dirilis untuk Android.
4. AirDrop: Meskipun bukan aplikasi khusus, AirDrop adalah fitur penting di ekosistem iOS yang memungkinkan pengguna untuk berbagi file secara nirkabel dengan perangkat iOS lainnya dalam jarak dekat. Android memiliki teknologi serupa bernama "Nearby Share", tetapi tidak ada versi langsung dari AirDrop pada Android.
5. Pages, Numbers, dan Keynote: Ini adalah aplikasi produktivitas yang setara dengan Microsoft Word, Excel, dan PowerPoint. Meskipun ada alternatif untuk aplikasi ini di Android, aplikasi resmi yang dikembangkan oleh Apple hanya tersedia untuk iOS.
2. Cari 2 buah software yang dapat berjalan pada platform website dan juga Desktop!
Jawab:
Berikut adalah contoh dua perangkat lunak (software) yang dapat berjalan pada platform website dan juga desktop:
1. Microsoft Office 365:Microsoft Office 365 adalah paket perangkat lunak produktivitas yang mencakup aplikasi seperti Microsoft Word, Excel, PowerPoint, Outlook, dan lainnya. Office 365 memungkinkan pengguna untuk mengakses dan menggunakan aplikasi ini melalui web browser pada platform website (Office Online) serta menginstalnya pada desktop mereka. Pengguna dapat menyimpan dan mengakses dokumen mereka melalui OneDrive, baik secara online maupun dalam versi desktop.
2. Trello:Trello adalah alat manajemen tugas yang menggunakan sistem papan kanban untuk membantu pengguna mengatur proyek, tugas, dan pekerjaan sehari-hari. Trello dapat diakses melalui web browser, memungkinkan pengguna untuk membuat dan mengelola papan tugas secara online. Selain itu, Trello juga menawarkan aplikasi desktop yang dapat diinstal di komputer pengguna untuk akses cepat dan pengelolaan tugas secara offline.
Kedua contoh di atas adalah perangkat lunak yang dapat berjalan pada platform website dan juga desktop, sehingga pengguna dapat mengakses dan menggunakan fungsionalitasnya baik secara online maupun offline.
Soal Eksplorasi (Nilai 20)
1. Jelaskan perbedaan antara pengembangan aplikasi mobile secara hybrid (contoh: Flutter) dan pengembangan aplikasi mobile secara native (contoh: Kotlin untuk pengembangan aplikasi Android).
Jawab:
Pengembangan aplikasi mobile secara hybrid dan native memiliki pendekatan yang berbeda dalam hal pembuatan dan kinerja aplikasi. Berikut adalah perbedaan utama antara keduanya, dengan contoh menggunakan Flutter (hybrid) dan Kotlin (native) untuk pengembangan aplikasi Android:
* Bahasa Pemrograman:
Hybrid (Flutter): Flutter menggunakan bahasa pemrograman Dart. Pengembang yang ingin mengembangkan aplikasi Flutter perlu memiliki pemahaman tentang Dart.
Native (Kotlin): Kotlin adalah bahasa pemrograman resmi untuk pengembangan aplikasi Android. Pengembang yang ingin mengembangkan aplikasi native Android biasanya menggunakan Kotlin atau Java.
* Pustaka UI:
Hybrid (Flutter): Flutter memiliki pustaka UI sendiri yang disebut "Widgets". Pengembang dapat membuat antarmuka pengguna yang kaya dan menarik dengan menggunakan widget-widget ini.
Native (Kotlin): Pengembang Android native menggunakan pustaka UI yang telah disediakan oleh Android, seperti XML dan Views. Seiring waktu, Android Studio telah menyediakan alat yang kuat seperti ConstraintLayout untuk mendesain antarmuka pengguna.
* Performa:
Hybrid (Flutter): Meskipun Flutter mencoba untuk mendekati kinerja native dengan menggunakan rendering langsung ke GPU, ada lapisan abstraksi tambahan yang dapat mempengaruhi kinerja dalam aplikasi yang lebih kompleks.
Native (Kotlin): Pengembangan aplikasi native cenderung memiliki kinerja yang lebih baik karena menggunakan pustaka dan API yang telah dioptimalkan untuk platform tertentu.
* Akses ke Fitur Perangkat:
Hybrid (Flutter): Meskipun Flutter memiliki banyak plugin yang mendukung akses ke fitur perangkat seperti kamera, lokasi, dll., terkadang akses langsung ke beberapa fitur perangkat dapat lebih terbatas atau kompleks.
Native (Kotlin): Pengembangan native memberikan akses penuh dan langsung ke semua fitur perangkat, karena Anda bekerja langsung dengan API yang disediakan oleh platform.
* Waktu Pengembangan:
Hybrid (Flutter): Pengembangan aplikasi hybrid sering dianggap lebih cepat karena satu basis kode dapat digunakan untuk platform Android dan iOS.
Native (Kotlin): Pengembangan aplikasi native mungkin memerlukan waktu lebih lama karena pengembang harus membuat kode terpisah untuk masing-masing platform.
* Tampilan Antarmuka Pengguna:
Hybrid (Flutter): Dengan menggunakan widget-widget kustom, aplikasi Flutter dapat memiliki tampilan antarmuka pengguna yang konsisten di berbagai platform.
Native (Kotlin): Pengembang aplikasi native cenderung lebih mudah mengikuti pedoman desain platform tertentu, yang dapat membantu aplikasi merasa lebih "alami" di platform masing-masing.
Pilihan antara pengembangan aplikasi mobile secara hybrid dan native tergantung pada kebutuhan proyek, tingkat pengalaman pengembang, batasan waktu, dan preferensi desain antarmuka pengguna.
2. Sebutkan contoh kasus yang tepat untuk pengembangan aplikasi mobile secara hybrid.
Jawab:
Pengembangan aplikasi mobile secara hybrid cocok digunakan dalam berbagai kasus di mana Anda ingin menghasilkan aplikasi yang dapat berjalan di berbagai platform (seperti iOS dan Android) dengan kode yang sama atau sebagian besar sama. Berikut adalah beberapa contoh kasus yang tepat untuk pengembangan aplikasi mobile secara hybrid:
1. Aplikasi Bisnis Sederhana: Jika Anda perlu membangun aplikasi bisnis sederhana seperti katalog produk, aplikasi survei, atau pengelolaan inventaris yang tidak memerlukan akses ke fitur perangkat keras khusus, pengembangan hybrid dapat lebih efisien.
2. Aplikasi Internal Perusahaan: Aplikasi internal yang digunakan oleh perusahaan Anda sendiri untuk tujuan seperti manajemen proyek, komunikasi internal, atau pelacakan tugas bisa diimplementasikan secara hybrid untuk mempercepat pengembangan.
3. Aplikasi Berita atau Konten: Aplikasi berita, blog, atau aplikasi yang fokus pada konten tampilan seperti gambar dan teks dapat dikembangkan secara hybrid, karena fitur-fitur perangkat keras khusus mungkin tidak terlalu diperlukan.
4. Aplikasi E-commerce Sederhana: Jika Anda ingin membangun aplikasi e-commerce sederhana yang memungkinkan pengguna untuk menelusuri produk, menambahkan produk ke keranjang, dan melakukan pembayaran, pendekatan hybrid dapat mempercepat pengembangan.
5. Aplikasi Promosi Acara atau Produk: Aplikasi yang dibuat hanya untuk waktu terbatas, seperti aplikasi promosi acara atau produk tertentu, dapat diimplementasikan dengan cepat menggunakan pengembangan hybrid.
6. Prototipe Cepat: Jika Anda ingin menguji ide atau konsep dengan cepat sebelum menginvestasikan sumber daya lebih lanjut, pengembangan hybrid dapat membantu Anda membuat prototipe dengan cepat.
7. Aplikasi Sosial Sederhana: Aplikasi yang menawarkan fitur sosial sederhana seperti berbagi gambar atau posting teks dapat diimplementasikan secara hybrid.